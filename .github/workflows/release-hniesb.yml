# This is a manual workflow that performs following activities:
# 1. Determine the version number tag i.e. Release_1.0_<branch-name>_<build execution>  
# 2. Determine tags for OpenShift image
# 3. Run the maven install for client code
# 4. Run the maven install for hnsesb code
# 5. Pass the foder to OpenShift build and start the build
# 6. Tag the image in namespace with build tag.
# 7. if build succesful Move the image from tools namespace to the environment


name: release-hniesb

# Build the image and deploy in OpenShift environment
env:
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-tools
  IMAGE_REGISTRY_USER: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  IMAGE_NAME: hniesb
  IMAGE_TAGS:
  RELEASE_VERSION:
  #Required if we are deploying as well in this workflow.
  #TESTNS_IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, 5915-hniesb-rel-workflow ]

  # The user specifies the optional tag  
  # --------------------------------------------------------------------------
  workflow_dispatch:
    inputs:
      OPENSHIFT_IMAGE_TAG:
        description: 'Optional parameter for additional tags on released images. '
        required: false
        default:
              
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "createHniEsbRelease"
  createHniEsbRelease:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # It should get the code from branch that triggered this workflow
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3

      # 1. Determine the version number tag i.e. Release_1.0_<branch-name>_<build execution> 
      - name: Determine Version number
        # Branch name is fixed to 'main' in version identifier
        run: |
          echo "RELEASE_VERSION=Release_1.0_${{github.ref_name}}_${{github.run_number}}" | tee -a $GITHUB_ENV
        
      # 2. Determine tags for OpenShift image
      - name: Determine image tags
        run: |
          echo "IMAGE_TAGS= ${GITHUB_SHA::12} ${{ env.RELEASE_VERSION }} ${{ github.event.inputs.OPENSHIFT_IMAGE_TAG }}  " | tee -a $GITHUB_ENV

      # Support step .. can be removed after development is complete
      - name: Print values
        run: |
          echo "Branch in use: ${{ github.ref_name }}"
          echo "Run number: ${{ github.run_number }}"
          echo "Release version: ${{ env.RELEASE_VERSION }}"
          echo "Image tags: ${{ env.IMAGE_TAGS }}"
          echo "Full commit version: ${{github.sha}}"
          echo "12 digits commit version#1: ${GITHUB_SHA::12}"
          echo "12 digits commit version#2: ${{{github.sha::12}}"
          mvn -version

      # Run the maven install for client code
      - name: Maven run for client code
        run: |
          cd ${{github.workspace}}/hn-common
          mvn install

      # Run the maven install for hnsesb code
      - name: Maven run for hnsecure code
        run: |
          cd ${{github.workspace}}/hnsecure
          mvn install -Dimpl-version=${{ env.RELEASE_VERSION }} -Dgit-commit=${GITHUB_SHA::12}