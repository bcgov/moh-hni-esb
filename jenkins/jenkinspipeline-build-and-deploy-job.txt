// This pipeline is created to build the application using build config and then deploy using deployment config
pipeline {
	environment {
		CLUSTER = "openshift"
    	OC_JEKNINS_USER = "deployer-c5839f-tools"
		PROJECT = project()
		BUILD_NAME = appName()
		IMAGE_STREAM = "image-registry.openshift-image-registry.svc:5000/${PROJECT}/${BUILD_NAME}:latest"
		
	}
    agent any
    stages {
        stage('Checkout') {
            steps {
                // Get some code from a GitHub repository
                echo "Getting code from main"
                git branch: "${BRANCH_NAME}", url: "https://github.com/bcgov/moh-hni-esb"
				//sh 'printenv'
            }
        }
        stage("Start Openshift build process") {
            steps {
				script{
					openshift.withCluster( "${CLUSTER}" ) {
                        openshift.withCredentials( "${OC_JEKNINS_USER}" ) {
                            openshift.withProject("${PROJECT}"){
								echo "Using project: ${openshift.project()} in cluster ${openshift.cluster()} "
								def bcSelector = openshift.selector( "buildconfig", "${BUILD_NAME}")
								echo "Build name ${BUILD_NAME} exist in project ${PROJECT}." 
								def buildRun = bcSelector.startBuild("--from-dir",".")
								buildRun.logs('-f')
								def bStatus = buildRun.object().status.phase
								// If build is complete add tagging
								if("Complete"==bStatus){
									echo "Build status is ${bStatus}.  Image created is ${IMAGE_STREAM}"
									echo "Tagging the build with build tag: ${BUILD_TAG}"
									openshift.tag( "${IMAGE_STREAM}", "${BUILD_NAME}:${BUILD_TAG}")
								}
								// if build is a failure, process should failure
								else{
									echo "Build status is ${bStatus}."
									sh 'false'
								}
							}
						}
					}
				}
            }
        }
    }
    post {
        always {
            echo "Complete"
        }
    }
}
def project() {
	def ns = "${NAMESPACE}"
	if (ns == "Dev"){
		return 'c5839f-dev'
	}
	return 'c5839f-test'
}
def appName() {
	def ns = "${NAMESPACE}" 
	if (ns == "Dev"){
		return "hnsesb-dev"
	}
	return "hnsesb-test"
}