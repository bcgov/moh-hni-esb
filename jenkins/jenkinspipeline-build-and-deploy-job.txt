pipeline {
	environment {
		IMAGE_STREAM = "image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${BUILD_NAME}:latest"
	}
    agent any
    stages {
        stage('Checkout') {
            steps {
                // Get some code from a GitHub repository
                echo "Getting code from main"
                git branch: "${BRANCH}", url: "https://github.com/bcgov/moh-hni-esb"
				//sh 'printenv'
            }
        }
        stage("Start Openshift build process") {
            steps {
                // This uploads your application's source code and performs a binary build in OpenShift
                // This is a step defined in the shared library (see the top for the URL)
                // (Or you could invoke this step using 'oc' commands!)
                //binaryBuild(buildConfigName: appName, buildFromPath: ".")
				script{
					openshift.withCluster( "openshift" ) { 
						openshift.withCredentials( "deployer-tools-oc-plugin" ) {
								openshift.withProject("${NAMESPACE}"){
									echo "Using project: ${openshift.project()} in cluster ${openshift.cluster()} "
									def bcSelector = openshift.selector( "buildconfig", "${BUILD_NAME}")
									if(bcSelector.exists()){
										echo "Build name ${BUILD_NAME} exist in project ${NAMESPACE}." 
										def buildRun = bcSelector.startBuild("--from-dir",".")
										buildRun.logs('-f')
										def bStatus = buildRun.object().status.phase
										// If build is complete add tagging
										if("Complete"==bStatus){
											echo "Build status is ${bStatus}.  Image created is ${IMAGE_STREAM}"
											echo "Tagging the build with build tag: ${BUILD_TAG}"
											openshift.tag( "IMAGE_STREAM", "${BUILD_NAME}:${BUILD_TAG}")
										}
										// if build is a failure, process should failure
										else{
											echo "Build status is ${bStatus}."
											sh 'false'
										}
									}else{
										echo "Build name ${BUILD_NAME} does not exist in project ${NAMESPACE}." 
										echo "Please provide valid build name."
									}
								}
						
						}
					}
				}
            }
        }
    }
    post {
        always {
            echo "Complete"
        }
    }
}
