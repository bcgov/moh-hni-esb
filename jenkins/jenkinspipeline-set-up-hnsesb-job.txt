// This pipeline is created to build the application using build config and then deploy using deployment config
pipeline {
	
	parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Name of the branch')

        //text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        //booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

        choice(name: 'NAMESPACE', choices: ['Dev', 'Test'], description: 'Project namespace in openshift')

        //password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
		// Add the custom properties 
		
    }

	environment {
		CLUSTER = "openshift"
    	OC_JENKINS_USER = "deployer-c5839f-tools"
		PROJECT = project()
		BUILD_NAME = appName()
		IMAGE_STREAM = "image-registry.openshift-image-registry.svc:5000/${PROJECT}/${BUILD_NAME}:latest"
		
	}
    agent any
    stages {
        stage("Checkout") {
            steps {
                // Get some code from a GitHub repository
                echo "Getting code from main"
                git branch: "${BRANCH_NAME}", url: "https://github.com/bcgov/moh-hni-esb"
            }
        }
 		stage("Package hn-common library") {
            steps {
                dir("hn-common") {
                    echo "Running: mvn install"
                    sh "mvn install"
                }	
            }
        }
        stage("Package hnsecure library") {
            steps {
                dir("hnsecure") {
                    echo "Running: mvn install"
                    sh "mvn install"
                }	
            }
        }        
    }
    post {
        always {
            echo "Complete"
        }
    }
}
def project() {
	def ns = "${NAMESPACE}"
	return "c5839f-" + ns.toLowerCase()
}
def appName() {
	def ns = "${NAMESPACE}"
	return "hnsesb-" + ns.toLowerCase() 
}